{"version":3,"sources":["actions/tensorflowActions.js","components/Header.jsx","actions/actionTypes.js","components/DrawableCanvas.jsx","components/Board.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/index.js","reducers/tensorflowReducer.js","index.js","store/configureStore.js"],"names":["model","Header","react_default","a","createElement","PREDICTION_SUCCESS","classIdToLabel2","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","loadPredictionSuccess","prediction","type","types","predict","strokes","width","height","inputData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","image","predictedArray","predictedClass","top3","predictionScore","toDisplay","wrap","_context","prev","next","abrupt","tf","resizeNearestNeighbor","mean","toFloat","expandDims","div","sub","as1D","max_three","dataSync","Math","round","dispose","stop","this","_x","apply","arguments","numbers","i","one","two","three","oneIndex","twoIndex","threeIndex","length","num","urlExists","_callee3","url","response","_context3","fetch","method","sent","ok","t0","loadHostedPretrainedModel","_callee4","_model","_context4","loadModel","_callee5","HOSTED_MODEL_JSON_URL","_context5","init","_ref2","_callee2","_context2","_x5","DrawableCanvas","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_strokes","_points","minX","Number","MAX_VALUE","minY","maxX","maxY","canvas","ReactDOM","findDOMNode","style","offsetWidth","window","innerHeight","context","getContext","setState","nextProps","clear","resetCanvas","e","rect","state","getBoundingClientRect","beginPath","targetTouches","pageX","left","pageY","top","lastX","lastY","drawing","min","max","clientX","clientY","currentX","currentY","draw","push","x","y","widthAndHeight","imageData","getImageData","actions","lX","lY","cX","cY","newContext","strokeStyle","brushColor","lineWidth","moveTo","lineTo","stroke","clearRect","defaults","getDefaultStyle","custom","canvasStyle","assign","onMouseDown","handleOnMouseDown","bind","onTouchStart","handleOnTouchStart","onMouseMove","handleOnMouseMove","onTouchMove","handleOnTouchMove","onMouseUp","handleonMouseUp","onTouchEnd","cursor","backgroundColor","React","Component","connect","ownProps","bindActionCreators","tensorflowActions","Board","borderColor","borderStyle","_this2","_this3","className","onClick","handleOnClickClear","dist","components_DrawableCanvas","App","onUnload","assertThisInitialized","event","returnValue","addEventListener","components_Header","components_Board","react_sticky_footer_es","bottomThreshold","normalStyles","padding","stickyStyles","href","Boolean","location","hostname","match","reducers_initialState","rootReducer","combineReducers","undefined","initialState","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","reduxImmutableStateInvariant","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1125f409.chunk.js","sourcesContent":["import * as types from './actionTypes';\nimport * as tf from \"@tensorflow/tfjs\";\nimport Canvas2Image from 'canvas2image';\n\nexport let model;\nlet classIdToLabel = {\n  0: \"line\",\n  1: \"bucket\",\n  2: \"bus\",\n  3: \"cello\",\n  4: \"ocean\",\n  5: \"truck\",\n  6: \"camouflage\",\n  7: \"harp\",\n  8: \"telephone\",\n  9: \"stairs\",\n  10: \"star\",\n  11: \"guitar\",\n  12: \"sandwich\",\n  13: \"sun\",\n  14: \"feather\",\n  15: \"leaf\",\n  16: \"toilet\",\n  17: \"strawberry\",\n  18: \"waterslide\",\n  19: \"bottlecap\",\n  20: \"coffee_cup\",\n  21: \"banana\",\n  22: \"dresser\",\n  23: \"house_plant\",\n  24: \"skateboard\",\n  25: \"skyscraper\",\n  26: \"pizza\",\n  27: \"hammer\",\n  28: \"teapot\",\n  29: \"giraffe\",\n  30: \"underwear\",\n  31: \"snowman\",\n  32: \"monkey\",\n  33: \"computer\",\n  34: \"pencil\",\n  35: \"shovel\",\n  36: \"necklace\",\n  37: \"compass\",\n  38: \"bat\",\n  39: \"bicycle\",\n  40: \"teddy-bear\",\n  41: \"scorpion\",\n  42: \"hot_dog\",\n  43: \"fish\",\n  44: \"see_saw\",\n  45: \"rain\",\n  46: \"snail\",\n  47: \"sink\",\n  48: \"belt\",\n  49: \"speedboat\",\n  50: \"pants\",\n  51: \"trombone\",\n  52: \"crocodile\",\n  53: \"broccoli\",\n  54: \"hedgehog\",\n  55: \"rainbow\",\n  56: \"fork\",\n  57: \"bulldozer\",\n  58: \"sock\",\n  59: \"snake\",\n  60: \"paper_clip\",\n  61: \"bear\",\n  62: \"marker\",\n  63: \"birthday_cake\",\n  64: \"saxophone\",\n  65: \"rake\",\n  66: \"stethoscope\",\n  67: \"broom\",\n  68: \"crown\",\n  69: \"square\",\n  70: \"fire_hydrant\",\n  71: \"jail\",\n  72: \"donut\",\n  73: \"oven\",\n  74: \"beard\",\n  75: \"yoga\",\n  76: \"The_Eiffel_Tower\",\n  77: \"camera\",\n  78: \"purse\",\n  79: \"ice_cream\",\n  80: \"pig\",\n  81: \"trumpet\",\n  82: \"table\",\n  83: \"bush\",\n  84: \"rollerskates\",\n  85: \"goatee\",\n  86: \"cup\",\n  87: \"anvil\",\n  88: \"suitcase\",\n  89: \"chair\",\n  90: \"drill\",\n  91: \"peanut\",\n  92: \"squirrel\",\n  93: \"matches\",\n  94: \"sword\",\n  95: \"cat\",\n  96: \"toe\",\n  97: \"snorkel\",\n  98: \"pond\",\n  99: \"calculator\",\n  100: \"airplane\",\n  101: \"squiggle\",\n  102: \"blackberry\",\n  103: \"ear\",\n  104: \"frying_pan\",\n  105: \"chandelier\",\n  106: \"lollipop\",\n  107: \"binoculars\",\n  108: \"garden\",\n  109: \"basket\",\n  110: \"penguin\",\n  111: \"washing_machine\",\n  112: \"canoe\",\n  113: \"screwdriver\",\n  114: \"beach\",\n  115: \"eyeglasses\",\n  116: \"mouse\",\n  117: \"apple\",\n  118: \"van\",\n  119: \"grapes\",\n  120: \"grass\",\n  121: \"watermelon\",\n  122: \"floor_lamp\",\n  123: \"moon\",\n  124: \"zigzag\",\n  125: \"nail\",\n  126: \"leg\",\n  127: \"smiley_face\",\n  128: \"octagon\",\n  129: \"dumbbell\",\n  130: \"sweater\",\n  131: \"stitches\",\n  132: \"tractor\",\n  133: \"foot\",\n  134: \"helmet\",\n  135: \"basketball\",\n  136: \"crab\",\n  137: \"clock\",\n  138: \"diamond\",\n  139: \"car\",\n  140: \"axe\",\n  141: \"traffic_light\",\n  142: \"sleeping_bag\",\n  143: \"baseball\",\n  144: \"eye\",\n  145: \"flower\",\n  146: \"hot_air_balloon\",\n  147: \"tree\",\n  148: \"wine_bottle\",\n  149: \"hot_tub\",\n  150: \"peas\",\n  151: \"door\",\n  152: \"calendar\",\n  153: \"wine_glass\",\n  154: \"stove\",\n  155: \"hockey_stick\",\n  156: \"toothpaste\",\n  157: \"moustache\",\n  158: \"mountain\",\n  159: \"tooth\",\n  160: \"cannon\",\n  161: \"firetruck\",\n  162: \"shorts\",\n  163: \"stereo\",\n  164: \"cloud\",\n  165: \"paintbrush\",\n  166: \"pear\",\n  167: \"dishwasher\",\n  168: \"laptop\",\n  169: \"frog\",\n  170: \"vase\",\n  171: \"diving_board\",\n  172: \"backpack\",\n  173: \"lobster\",\n  174: \"golf_club\",\n  175: \"garden_hose\",\n  176: \"hexagon\",\n  177: \"bird\",\n  178: \"finger\",\n  179: \"animal_migration\",\n  180: \"steak\",\n  181: \"mailbox\",\n  182: \"shark\",\n  183: \"television\",\n  184: \"mermaid\",\n  185: \"cow\",\n  186: \"crayon\",\n  187: \"palm_tree\",\n  188: \"windmill\",\n  189: \"cookie\",\n  190: \"kangaroo\",\n  191: \"blueberry\",\n  192: \"tiger\",\n  193: \"tennis_racquet\",\n  194: \"dragon\",\n  195: \"cell_phone\",\n  196: \"pineapple\",\n  197: \"candle\",\n  198: \"sheep\",\n  199: \"cactus\",\n  200: \"angel\",\n  201: \"mosquito\",\n  202: \"church\",\n  203: \"couch\",\n  204: \"The_Great_Wall_of_China\",\n  205: \"tornado\",\n  206: \"jacket\",\n  207: \"nose\",\n  208: \"octopus\",\n  209: \"motorbike\",\n  210: \"bracelet\",\n  211: \"brain\",\n  212: \"The_Mona_Lisa\",\n  213: \"toothbrush\",\n  214: \"carrot\",\n  215: \"barn\",\n  216: \"microphone\",\n  217: \"zebra\",\n  218: \"map\",\n  219: \"camel\",\n  220: \"wheel\",\n  221: \"bridge\",\n  222: \"lighthouse\",\n  223: \"spreadsheet\",\n  224: \"hockey_puck\",\n  225: \"wristwatch\",\n  226: \"helicopter\",\n  227: \"swan\",\n  228: \"flamingo\",\n  229: \"eraser\",\n  230: \"bee\",\n  231: \"flashlight\",\n  232: \"megaphone\",\n  233: \"ladder\",\n  234: \"shoe\",\n  235: \"asparagus\",\n  236: \"t-shirt\",\n  237: \"passport\",\n  238: \"hand\",\n  239: \"triangle\",\n  240: \"lightning\",\n  241: \"mug\",\n  242: \"submarine\",\n  243: \"violin\",\n  244: \"owl\",\n  245: \"scissors\",\n  246: \"baseball_bat\",\n  247: \"string_bean\",\n  248: \"lantern\",\n  249: \"house\",\n  250: \"elbow\",\n  251: \"power_outlet\",\n  252: \"stop_sign\",\n  253: \"bed\",\n  254: \"school_bus\",\n  255: \"hamburger\",\n  256: \"lipstick\",\n  257: \"light_bulb\",\n  258: \"flip_flops\",\n  259: \"alarm_clock\",\n  260: \"ant\",\n  261: \"face\",\n  262: \"microwave\",\n  263: \"hourglass\",\n  264: \"panda\",\n  265: \"pool\",\n  266: \"circle\",\n  267: \"onion\",\n  268: \"raccoon\",\n  269: \"bowtie\",\n  270: \"umbrella\",\n  271: \"butterfly\",\n  272: \"fireplace\",\n  273: \"skull\",\n  274: \"train\",\n  275: \"mouth\",\n  276: \"hat\",\n  277: \"drums\",\n  278: \"book\",\n  279: \"radio\",\n  280: \"roller_coaster\",\n  281: \"snowflake\",\n  282: \"piano\",\n  283: \"rhinoceros\",\n  284: \"cake\",\n  285: \"toaster\",\n  286: \"paint_can\",\n  287: \"knee\",\n  288: \"spider\",\n  289: \"tent\",\n  290: \"rabbit\",\n  291: \"clarinet\",\n  292: \"whale\",\n  293: \"boomerang\",\n  294: \"hospital\",\n  295: \"ceiling_fan\",\n  296: \"saw\",\n  297: \"pillow\",\n  298: \"fence\",\n  299: \"dog\",\n  300: \"duck\",\n  301: \"parrot\",\n  302: \"swing_set\",\n  303: \"spoon\",\n  304: \"fan\",\n  305: \"cruise_ship\",\n  306: \"picture_frame\",\n  307: \"mushroom\",\n  308: \"headphones\",\n  309: \"horse\",\n  310: \"flying_saucer\",\n  311: \"lion\",\n  312: \"postcard\",\n  313: \"bench\",\n  314: \"keyboard\",\n  315: \"parachute\",\n  316: \"streetlight\",\n  317: \"arm\",\n  318: \"police_car\",\n  319: \"sailboat\",\n  320: \"cooler\",\n  321: \"bathtub\",\n  322: \"campfire\",\n  323: \"hurricane\",\n  324: \"soccer_ball\",\n  325: \"potato\",\n  326: \"dolphin\",\n  327: \"key\",\n  328: \"elephant\",\n  329: \"sea_turtle\",\n  330: \"popsicle\",\n  331: \"envelope\",\n  332: \"pickup_truck\",\n  333: \"remote_control\",\n  334: \"ambulance\",\n  335: \"pliers\",\n  336: \"bread\",\n  337: \"castle\",\n  338: \"river\",\n  339: \"bandage\"\n};\n\nlet classIdToLabel2 = {\n  0: \"airplane\",\n1: \"alarm clock\",\n2: \"ambulance\",\n3: \"angel\",\n4: \"animal migration\",\n5: \"ant\",\n6: \"anvil\",\n7: \"apple\",\n8: \"arm\",\n9: \"asparagus\",\n10: \"axe\",\n11: \"backpack\",\n12: \"banana\",\n13: \"bandage\",\n14: \"barn\",\n15: \"baseball\",\n16: \"baseball bat\",\n17: \"basket\",\n18: \"basketball\",\n19: \"bat\",\n20: \"bathtub\",\n21: \"beach\",\n22: \"bear\",\n23: \"beard\",\n24: \"bed\",\n25: \"bee\",\n26: \"belt\",\n27: \"bench\",\n28: \"bicycle\",\n29: \"binoculars\",\n30: \"bird\",\n31: \"birthday cake\",\n32: \"blackberry\",\n33: \"blueberry\",\n34: \"book\",\n35: \"boomerang\",\n36: \"bottlecap\",\n37: \"bowtie\",\n38: \"bracelet\",\n39: \"brain\",\n40: \"bread\",\n41: \"bridge\",\n42: \"broccoli\",\n43: \"broom\",\n44: \"bucket\",\n45: \"bulldozer\",\n46: \"bus\",\n47: \"bush\",\n48: \"butterfly\",\n49: \"cactus\",\n50: \"cake\",\n51: \"calculator\",\n52: \"calendar\",\n53: \"camel\",\n54: \"camera\",\n55: \"camouflage\",\n56: \"campfire\",\n57: \"candle\",\n58: \"cannon\",\n59: \"canoe\",\n60: \"car\",\n61: \"carrot\",\n62: \"castle\",\n63: \"cat\",\n64: \"ceiling fan\",\n65: \"cell phone\",\n66: \"cello\",\n67: \"chair\",\n68: \"chandelier\",\n69: \"church\",\n70: \"circle\",\n71: \"clarinet\",\n72: \"clock\",\n73: \"cloud\",\n74: \"coffee cup\",\n75: \"compass\",\n76: \"computer\",\n77: \"cookie\",\n78: \"cooler\",\n79: \"couch\",\n80: \"cow\",\n81: \"crab\",\n82: \"crayon\",\n83: \"crocodile\",\n84: \"crown\",\n85: \"cruise ship\",\n86: \"cup\",\n87: \"diamond\",\n88: \"dishwasher\",\n89: \"diving board\",\n90: \"dog\",\n91: \"dolphin\",\n92: \"donut\",\n93: \"door\",\n94: \"dragon\",\n95: \"dresser\",\n96: \"drill\",\n97: \"drums\",\n98: \"duck\",\n99: \"dumbbell\",\n100: \"ear\",\n101: \"elbow\",\n102: \"elephant\",\n103: \"envelope\",\n104: \"eraser\",\n105: \"eye\",\n106: \"eyeglasses\",\n107: \"face\",\n108: \"fan\",\n109: \"feather\",\n110: \"fence\",\n111: \"finger\",\n112: \"fire hydrant\",\n113: \"fireplace\",\n114: \"firetruck\",\n115: \"fish\",\n116: \"flamingo\",\n117: \"flashlight\",\n118: \"flip flops\",\n119: \"floor lamp\",\n120: \"flower\",\n121: \"flying saucer\",\n122: \"foot\",\n123: \"fork\",\n124: \"frog\",\n125: \"frying pan\",\n126: \"garden\",\n127: \"garden hose\",\n128: \"giraffe\",\n129: \"goatee\",\n130: \"golf club\",\n131: \"grapes\",\n132: \"grass\",\n133: \"guitar\",\n134: \"hamburger\",\n135: \"hammer\",\n136: \"hand\",\n137: \"harp\",\n138: \"hat\",\n139: \"headphones\",\n140: \"hedgehog\",\n141: \"helicopter\",\n142: \"helmet\",\n143: \"hexagon\",\n144: \"hockey puck\",\n145: \"hockey stick\",\n146: \"horse\",\n147: \"hospital\",\n148: \"hot air balloon\",\n149: \"hot dog\",\n150: \"hot tub\",\n151: \"hourglass\",\n152: \"house\",\n153: \"house plant\",\n154: \"hurricane\",\n155: \"ice cream\",\n156: \"jacket\",\n157: \"jail\",\n158: \"kangaroo\",\n159: \"key\",\n160: \"keyboard\",\n161: \"knee\",\n162: \"ladder\",\n163: \"lantern\",\n164: \"laptop\",\n165: \"leaf\",\n166: \"leg\",\n167: \"light bulb\",\n168: \"lighthouse\",\n169: \"lightning\",\n170: \"line\",\n171: \"lineCount\",\n172: \"lion\",\n173: \"lipstick\",\n174: \"lobster\",\n175: \"lollipop\",\n176: \"mailbox\",\n177: \"map\",\n178: \"marker\",\n179: \"matches\",\n180: \"megaphone\",\n181: \"mermaid\",\n182: \"microphone\",\n183: \"microwave\",\n184: \"monkey\",\n185: \"moon\",\n186: \"mosquito\",\n187: \"motorbike\",\n188: \"mountain\",\n189: \"mouse\",\n190: \"moustache\",\n191: \"mouth\",\n192: \"mug\",\n193: \"mushroom\",\n194: \"nail\",\n195: \"necklace\",\n196: \"nose\",\n197: \"ocean\",\n198: \"octagon\",\n199: \"octopus\",\n200: \"onion\",\n201: \"oven\",\n202: \"owl\",\n203: \"paint can\",\n204: \"paintbrush\",\n205: \"palm tree\",\n206: \"panda\",\n207: \"pants\",\n208: \"paper clip\",\n209: \"parachute\",\n210: \"parrot\",\n211: \"passport\",\n212: \"peanut\",\n213: \"pear\",\n214: \"peas\",\n215: \"pencil\",\n216: \"penguin\",\n217: \"piano\",\n218: \"pickup truck\",\n219: \"picture frame\",\n220: \"pig\",\n221: \"pillow\",\n222: \"pineapple\",\n223: \"pizza\",\n224: \"pliers\",\n225: \"police car\",\n226: \"pond\",\n227: \"pool\",\n228: \"popsicle\",\n229: \"postcard\",\n230: \"potato\",\n231: \"power outlet\",\n232: \"purse\",\n233: \"rabbit\",\n234: \"raccoon\",\n235: \"radio\",\n236: \"rain\",\n237: \"rainbow\",\n238: \"rake\",\n239: \"remote control\",\n240: \"rhinoceros\",\n241: \"river\",\n242: \"roller coaster\",\n243: \"rollerskates\",\n244: \"sailboat\",\n245: \"sandwich\",\n246: \"saw\",\n247: \"saxophone\",\n248: \"school bus\",\n249: \"scissors\",\n250: \"scorpion\",\n251: \"screwdriver\",\n252: \"sea turtle\",\n253: \"see saw\",\n254: \"shark\",\n255: \"sheep\",\n256: \"shoe\",\n257: \"shorts\",\n258: \"shovel\",\n259: \"sink\",\n260: \"skateboard\",\n261: \"skull\",\n262: \"skyscraper\",\n263: \"sleeping bag\",\n264: \"smiley face\",\n265: \"snail\",\n266: \"snake\",\n267: \"snorkel\",\n268: \"snowflake\",\n269: \"snowman\",\n270: \"soccer ball\",\n271: \"sock\",\n272: \"speedboat\",\n273: \"spider\",\n274: \"spoon\",\n275: \"spreadsheet\",\n276: \"square\",\n277: \"squiggle\",\n278: \"squirrel\",\n279: \"stairs\",\n280: \"star\",\n281: \"steak\",\n282: \"stereo\",\n283: \"stethoscope\",\n284: \"stitches\",\n285: \"stop sign\",\n286: \"stove\",\n287: \"strawberry\",\n288: \"streetlight\",\n289: \"string bean\",\n290: \"submarine\",\n291: \"suitcase\",\n292: \"sun\",\n293: \"swan\",\n294: \"sweater\",\n295: \"swing set\",\n296: \"sword\",\n297: \"t-shirt\",\n298: \"table\",\n299: \"teapot\",\n300: \"teddy-bear\",\n301: \"telephone\",\n302: \"television\",\n303: \"tennis racquet\",\n304: \"tent\",\n305: \"The Eiffel Tower\",\n306: \"The Great Wall of China\",\n307: \"The Mona Lisa\",\n308: \"tiger\",\n309: \"toaster\",\n310: \"toe\",\n311: \"toilet\",\n312: \"tooth\",\n313: \"toothbrush\",\n314: \"toothpaste\",\n315: \"tornado\",\n316: \"tractor\",\n317: \"traffic light\",\n318: \"train\",\n319: \"tree\",\n320: \"triangle\",\n321: \"trombone\",\n322: \"truck\",\n323: \"trumpet\",\n324: \"umbrella\",\n325: \"underwear\",\n326: \"van\",\n327: \"vase\",\n328: \"violin\",\n329: \"washing machine\",\n330: \"watermelon\",\n331: \"waterslide\",\n332: \"whale\",\n333: \"wheel\",\n334: \"windmill\",\n335: \"wine bottle\",\n336: \"wine glass\",\n337: \"wristwatch\",\n338: \"yoga\",\n339: \"zebra\",\n340: \"zigzag\"\n}\n\nexport function loadPredictionSuccess(prediction) {\n  return {type: types.PREDICTION_SUCCESS, prediction: prediction};\n}\n\n// TODO: add a loadpredictionfailure action, you can use it when someone presses clear button\n// if model is null then failure else success\n\n// TODO: These strokes should be a copy of the actual strokes\nexport const predict = (strokes, width, height, inputData) => {\n// export async function predict(imageData) {\n  return async (dispatch) => {\n    if (model == null) {\n      return dispatch(loadPredictionSuccess(\"model could not be loaded\"));\n    }\n    // debugger\n    // Canvas2Image.saveAsJPEG(inputData, width, height)\n    const INPUT_IMAGE_SIZE = 64\n    const image = tf.tidy(() => {\n      // let image = tf.tensor(Array.from(getImageData(strokes, width, height)));\n      // image = tf.reshape(image, [width, height, 4]);\n      // image = tf.slice(image, [0, 0, 0], [width, height, 3]);\n      // image = image.mean(2);\n\n      let width = inputData.width;\n      let height = inputData.height;\n      // let image = tf.tensor(Array.from(inputData.data));\n\n    //   let image = tf.fromPixels(inputData);\n    //   const offset = tf.scalar(127.5);\n    // // Normalize the image from [0, 255] to [-1, 1].\n    //   image = image.sub(offset).div(offset);\n\n    //   image = tf.reshape(image, [width, height, 3]);\n    //   image = tf.slice(image, [0, 0, 0], [width, height, 3]);\n    //   image = image.mean(2);\n    //   image = tf.reshape(image, [width, height, 1]);\n    //   image = tf.image.resizeBilinear(image, [INPUT_IMAGE_SIZE, INPUT_IMAGE_SIZE]);\n    //   image = tf.reshape(image, [1, INPUT_IMAGE_SIZE, INPUT_IMAGE_SIZE, 1]);\n    //   debugger\n    //   return image;\n    \n    let image = tf.fromPixels(inputData,4)\n    image = image.resizeNearestNeighbor([INPUT_IMAGE_SIZE, INPUT_IMAGE_SIZE])\n    // debugger\n    image = image.mean(2)\n    image = image.toFloat()\n    image = image.expandDims(2)\n    image = image.expandDims()\n    image = image.toFloat()\n    image = image.div(31.875)\n    image = image.sub(1.0);\n      // let image2 = getImageData(strokes, width, height);\n      // image2 = tf.tensor(Array.from(image2))\n\n      // image2 = tf.reshape(image2, [width, height, 1]);\n      // image2 = tf.image.resizeBilinear(image2, [INPUT_IMAGE_SIZE, INPUT_IMAGE_SIZE]);\n      // image2 = tf.reshape(image2, [1, INPUT_IMAGE_SIZE, INPUT_IMAGE_SIZE, 1]);\n      return image;\n    });\n    // debugger\n    const predictedArray = model.predict(image);\n    const predictedClass = predictedArray.as1D();\n    const top3 = max_three(predictedClass.dataSync());\n    let predictionScore = predictedClass.dataSync()[top3[0]];\n    predictionScore = Math.round(predictionScore * 10000) / 10000;\n    predictedClass.dispose();\n    let toDisplay = classIdToLabel2[top3[0]] + \", Score: \" + predictionScore\n    dispatch(loadPredictionSuccess(toDisplay));\n  };\n}\n\nconst max_three = (numbers) => {\n  var i, one, two, three;\n  one = -9999;\n  two = -9999;\n  three = -9999;\n  let oneIndex = -1;\n  let twoIndex = -1;\n  let threeIndex = -1;\n\n  for (i = 0; i < numbers.length; i += 1) {\n      let num = numbers[i];\n      if (num > three) {\n          if (num >= two) {\n              three = two;\n              if (num >= one) {\n                  two = one;\n                  one = num;\n                  oneIndex = i;\n              }\n              else {\n                  two = num;\n                  twoIndex = i;\n              }\n          }\n          else {\n              three = num;\n              threeIndex = i;\n          }\n      }\n  }\n  return [oneIndex, twoIndex, threeIndex]\n};\n\n// TODO: this method currently sketches only start and end of ocnsecutive points in a stroke\n// the actual should draw a stroke between start and end, figure out how! \n// FIXED: recursively draw the line between start and end\nfunction getImageData(strokes, width, height) {\n    var pixelImage = new Array(width).fill(-1.0).map(row => new Array(height).fill(-1.0))\n    strokes.forEach( points => {\n      if(points.length>0){\n        let start=points[0];\n        let end = null;\n        for(let i=1;i<points.length;i++){\n          end = points[i];\n          drawStroke(start, end, pixelImage);\n          // pixelImage[Math.round(start[0])][Math.round(start[1])] = 1.0;\n          // pixelImage[Math.round(end[0])][Math.round(end[1])] = 1.0;\n          start = end;\n        }\n      }\n    });\n    return pixelImage;\n}\n\n// TODO : make less calls to Math.round()\nfunction drawStroke(start, end, pixelImage, lineWidth=6) {\n  // if x-cordinates or y-cordinates are equal, then draw a straight line\n  start[0] = Math.round(start[0]);\n  start[1] = Math.round(start[1]);\n  end[0] = Math.round(end[0]);\n  end[1] = Math.round(end[1]);\n  // if(start[0]===end[0]){\n  //   let temp = start[1];\n  //   while(temp!==end[1]){\n  //     pixelImage[start[0]][temp] = 1.0;\n  //     temp = temp>end[1] ? --temp : ++temp;\n  //   }\n  //   pixelImage[start[0]][temp] = 1.0;\n  //   return;\n  // }\n  // if(start[1]===end[1]){\n  //   let temp = start[0];\n  //   while(temp!==end[0]){\n  //     pixelImage[temp][start[1]] = 1.0;\n  //     temp = temp>end[0] ? --temp : ++temp;\n  //   }\n  //   pixelImage[temp][start[1]] = 1.0;\n  //   return;\n  // }\n  if(start[0]-1 === end[0] || start[0]===end[0] || start[0]+1===end[0]){\n    if(start[1]-1 === end[1] || start[1]===end[1] || start[1]+1===end[1]){\n      pixelImage[start[0]][start[1]] = 1.0;\n      pixelImage[end[0]][end[1]] = 1.0;\n      return;\n    }\n  }\n  let middle = [];\n  middle[0] = Math.round((start[0]+end[0])/2);\n  middle[1] = Math.round((start[1]+end[1])/2);\n  drawStroke(start, middle, pixelImage);\n  drawStroke(middle, end, pixelImage);\n  // pixelImage[Math.round(start[0])][Math.round(start[1])] = 1.0;\n  // pixelImage[Math.round(end[0])][Math.round(end[1])] = 1.0;\n}\n\n\n\n/**\n * Test whether a given URL is retrievable.\n */\nasync function urlExists(url) {\n  try {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return response.ok;\n  } catch (err) {\n    return false;\n  }\n}\n\n/**\n * Load pretrained model stored at a remote URL.\n *\n * @return An instance of `tf.Model` with model topology and weights loaded.\n */\nasync function loadHostedPretrainedModel(url) {\n  try {\n    const model = await tf.loadModel(url);\n    return model;\n  } catch (error) {\n    throw(error);\n  }\n}\n\nasync function loadModel(HOSTED_MODEL_JSON_URL) {\n  if (await urlExists(HOSTED_MODEL_JSON_URL)) {\n    return loadHostedPretrainedModel(HOSTED_MODEL_JSON_URL);\n  }\n}\n\nexport const init = () => {\n  return async (dispatch) => {\n      // model = await loadModel(\"http://192.168.0.4:8081/savedModels/jsModels2/model.json\");\n      model = await loadModel(\"https://raw.githubusercontent.com/smd-faizan/razorback/development/drawAnything/savedModels/jsModels2/model.json\");\n      dispatch(loadPredictionSuccess(\"Model is loaded\"));\n  };\n};\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div>\n      <h2>Draw anything!</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","\nexport const PREDICTION_SUCCESS = 'PREDICTION_SUCCESS';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport assign from 'object-assign';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as tensorflowActions from \"../actions/tensorflowActions\";\n\nclass DrawableCanvas extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this._strokes = [];\n    this._points = [];\n    this.minX = Number.MAX_VALUE;\n    this.minY = Number.MAX_VALUE;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  componentDidMount(){\n    // document.body.style.overflow = \"hidden\";\n    const canvas = ReactDOM.findDOMNode(this);\n\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.width = canvas.offsetWidth; // 256\n    canvas.height = window.innerHeight-100; // 256\n\n    const context = canvas.getContext('2d');\n\n    this.setState({\n      canvas,\n      context\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.clear){\n      this.resetCanvas();\n      this._strokes = [];\n      this._points = [];\n    }\n  }\n  static getDefaultStyle() {\n    return {\n      brushColor: '#FFFF00',\n      lineWidth: 8,\n      cursor: 'pointer',\n      canvasStyle: {\n        backgroundColor: '#00FFDC'\n      },\n      clear: false\n    };\n  }\n\n  handleOnTouchStart (e) {\n    const rect = this.state.canvas.getBoundingClientRect();\n    this.state.context.beginPath();\n    this._points = [[e.targetTouches[0].pageX - rect.left, e.targetTouches[0].pageY - rect.top]]\n    this.setState({\n      lastX: e.targetTouches[0].pageX - rect.left,\n      lastY: e.targetTouches[0].pageY - rect.top,\n      drawing: true\n    });\n\n\n    this.minX = Math.min(this.minX, e.targetTouches[0].pageX - rect.left);\n    this.minY = Math.min(this.minY, e.targetTouches[0].pageY - rect.top);\n    this.maxX = Math.max(this.maxX, e.targetTouches[0].pageX - rect.left);\n    this.maxY = Math.max(this.maxY, e.targetTouches[0].pageY - rect.top);\n\n  }\n\n  handleOnMouseDown(e){\n    const rect = this.state.canvas.getBoundingClientRect();\n    this.state.context.beginPath();\n    this._points = [[e.clientX - rect.left, e.clientY - rect.top]]\n    this.setState({\n      lastX: e.clientX - rect.left,\n      lastY: e.clientY - rect.top,\n      drawing: true\n    });\n\n    this.minX = Math.min(this.minX, e.clientX - rect.left);\n    this.minY = Math.min(this.minY, e.clientY - rect.top);\n    this.maxX = Math.max(this.maxX, e.clientX - rect.left);\n    this.maxY = Math.max(this.maxY, e.clientY - rect.top);\n\n  }\n\n  handleOnTouchMove (e) {\n    if (this.state.drawing) {\n      const rect = this.state.canvas.getBoundingClientRect();\n      const lastX = this.state.lastX;\n      const lastY = this.state.lastY;\n      let currentX = e.targetTouches[0].pageX - rect.left;\n      let currentY = e.targetTouches[0].pageY - rect.top;\n      this.draw(lastX, lastY, currentX, currentY);\n      this.setState({\n        lastX: currentX,\n        lastY: currentY\n      });\n    }\n  }\n\n  handleOnMouseMove(e){\n    if(this.state.drawing){\n      const rect = this.state.canvas.getBoundingClientRect();\n      const lastX = this.state.lastX;\n      const lastY = this.state.lastY;\n      let currentX = e.clientX - rect.left;\n      let currentY = e.clientY - rect.top;\n\n      this.draw(lastX, lastY, currentX, currentY);\n      this.setState({\n        lastX: currentX,\n        lastY: currentY\n      });\n    }\n  }\n\n  handleonMouseUp() {\n    this._strokes.push(this._points);\n    this.setState({\n      drawing: false\n    });\n    let x = this.maxX - this.minX;\n    let y = this.maxY - this.minY;\n    let widthAndHeight = x>y ? x:y\n    let imageData = this.state.context.getImageData(\n      Math.round(this.minX),\n      Math.round(this.minY),\n      Math.round(widthAndHeight),\n      Math.round(widthAndHeight)\n    );\n\n\n    this.props.actions.predict(this._strokes, this.state.canvas.width, this.state.canvas.height, imageData);\n  }\n\n  draw(lX, lY, cX, cY) {\n    this._points.push([cX, cY]);\n\n    this.minX = Math.min(this.minX, cX);\n    this.minY = Math.min(this.minY, cY);\n    this.maxX = Math.max(this.maxX, cX);\n    this.maxY = Math.max(this.maxY, cY);\n\n    const newContext = this.state.context;\n    newContext.strokeStyle = this.props.brushColor;\n    newContext.lineWidth = this.props.lineWidth;\n    this.setState({\n      context: newContext\n    });\n    this.state.context.moveTo(lX, lY);\n    this.state.context.lineTo(cX, cY);\n    this.state.context.stroke();\n  }\n\n  resetCanvas(){\n    const width = this.state.context.canvas.width;\n    const height = this.state.context.canvas.height;\n    this.state.context.clearRect(0, 0, width, height);\n  }\n\n  canvasStyle(){\n    const defaults = DrawableCanvas.getDefaultStyle();\n    const custom = this.props.canvasStyle;\n\n    return assign({}, defaults, custom);\n  }\n\n  render() {\n    return (\n      <canvas style = {this.canvasStyle()}\n        onMouseDown = {this.handleOnMouseDown.bind(this)}\n        onTouchStart = {this.handleOnTouchStart.bind(this)}\n        onMouseMove = {this.handleOnMouseMove.bind(this)}\n        onTouchMove = {this.handleOnTouchMove.bind(this)}\n        onMouseUp = {this.handleonMouseUp.bind(this)}\n        onTouchEnd = {this.handleonMouseUp.bind(this)}\n      >\n      </canvas>\n    );\n  }\n\n}\n\nDrawableCanvas.propTypes = {\n  brushColor: PropTypes.string,\n  lineWidth: PropTypes.number,\n  cursor: PropTypes.string,\n  canvasStyle: PropTypes.shape({\n    backgroundColor: PropTypes.string\n  }),\n  clear: PropTypes.bool,\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(tensorflowActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DrawableCanvas);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as tensorflowActions from \"../actions/tensorflowActions\";\nimport DrawableCanvas from \"./DrawableCanvas\";\nimport PropTypes from 'prop-types';\nimport { TouchScrollable } from 'react-scrolllock';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brushColor: \"#000000\",\n      lineWidth: 8,\n      canvasStyle: {\n        backgroundColor: \"#FFFFFF\",\n        borderColor: \"#786B6B\",\n        borderStyle: \"solid\"\n      },\n      clear: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.init();\n  }\n\n  handleOnClickClear() {\n    this.setState({clear: true},\n      () => {\n        this.setState({ clear: false });\n      }\n    );\n    this.props.actions.loadPredictionSuccess(\"Model is loaded\")\n  }\n\n  render() {\n    return (\n      <div>\n        <label>Predicted class: {this.props.prediction}</label>{' '}\n        <button className=\"ui button yellow\" onClick={() => this.handleOnClickClear()}>Clear</button>\n        <br></br>\n        <TouchScrollable>\n          <DrawableCanvas {...this.state}/>\n        </TouchScrollable>\n        {/* <div> Things to draw: apple  butterfly  arirplane </div> */}\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  prediction: PropTypes.string.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    prediction: state.prediction\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(tensorflowActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board);\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./css/App.css\";\nimport Header from \"./components/Header\";\nimport Board from \"./components/Board\";\nimport StickyFooter from 'react-sticky-footer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      this.onUnload = this.onUnload.bind(this);\n  }\n\n  onUnload(event) { \n      event.returnValue = \"Your work will be lost.\"\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", this.onUnload)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n        <Header />\n        <Board />\n        <StickyFooter\n          bottomThreshold={10}\n          normalStyles={{\n          backgroundColor: \"#999999\",\n          padding: \"0.1rem\"\n          }}\n          stickyStyles={{\n          backgroundColor: \"rgba(255,255,255,.8)\",\n          padding: \"0.1rem\"\n          }}> v1.3.0 source: <a href=\"https://quickdraw.withgoogle.com/\">Qucik Draw!</a>\n        </StickyFooter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  prediction: \"Loading model... , please wait\"\n};\n","import { combineReducers } from 'redux';\nimport prediction from './tensorflowReducer';\n\nconst rootReducer = combineReducers({\n  prediction\n});\n\nexport default rootReducer;\n","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nexport default function prediction(state = initialState.prediction, action) {\n  switch (action.type) {\n    case types.PREDICTION_SUCCESS:\n    return action.prediction;\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css//index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(\n      applyMiddleware(thunk, reduxImmutableStateInvariant())\n    )\n  );\n}"],"sourceRoot":""}