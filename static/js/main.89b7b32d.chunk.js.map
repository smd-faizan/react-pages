{"version":3,"sources":["actions/tensorflowActions.js","components/counter.jsx","actions/actionTypes.js","components/DrawableCanvas.jsx","components/Board.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/index.js","reducers/tensorflowReducer.js","index.js","store/configureStore.js"],"names":["model","Header","react_default","a","createElement","Component","PREDICTION_SUCCESS","classIdToLabel","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","loadPredictionSuccess","prediction","type","types","predict","imageData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","image","predictedArray","predictedClass","classId","predictionScore","wrap","_context","prev","next","abrupt","tf","inputData","width","height","Array","from","data","mean","resizeBilinear","as1D","argMax","dataSync","Math","round","dispose","stop","this","_x","apply","arguments","urlExists","_callee3","url","response","_context3","fetch","method","sent","ok","t0","loadHostedPretrainedModel","_callee4","_model","_context4","loadModel","_callee5","HOSTED_MODEL_JSON_URL","_context5","init","_ref2","_callee2","_context2","_x5","DrawableCanvas","canvas","ReactDOM","findDOMNode","style","offsetWidth","offsetHeight","context","getContext","setState","nextProps","clear","resetCanvas","e","rect","state","getBoundingClientRect","beginPath","lastX","targetTouches","pageX","left","lastY","pageY","top","drawing","clientX","clientY","currentX","currentY","draw","getImageData","props","actions","lX","lY","cX","cY","newContext","strokeStyle","brushColor","lineWidth","moveTo","lineTo","stroke","console","log","clearRect","defaults","getDefaultStyle","custom","canvasStyle","assign","onMouseDown","handleOnMouseDown","bind","onTouchStart","handleOnTouchStart","onMouseMove","handleOnMouseMove","onTouchMove","handleOnTouchMove","onMouseUp","handleonMouseUp","onTouchEnd","cursor","backgroundColor","React","connect","ownProps","bindActionCreators","tensorflowActions","Board","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","borderColor","borderStyle","_this2","_this3","className","onClick","handleOnClickClear","components_DrawableCanvas","App","counter","components_Board","Boolean","window","location","hostname","match","reducers_initialState","rootReducer","combineReducers","length","undefined","initialState","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","reduxImmutableStateInvariant","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89b7b32d.chunk.js","sourcesContent":["import * as types from './actionTypes';\nimport * as tf from \"@tensorflow/tfjs\";\n\nexport let model;\nlet classIdToLabel = {\n  0: \"line\",\n  1: \"bucket\",\n  2: \"bus\",\n  3: \"cello\",\n  4: \"ocean\",\n  5: \"truck\",\n  6: \"camouflage\",\n  7: \"harp\",\n  8: \"telephone\",\n  9: \"stairs\",\n  10: \"star\",\n  11: \"guitar\",\n  12: \"sandwich\",\n  13: \"sun\",\n  14: \"feather\",\n  15: \"leaf\",\n  16: \"toilet\",\n  17: \"strawberry\",\n  18: \"waterslide\",\n  19: \"bottlecap\",\n  20: \"coffee_cup\",\n  21: \"banana\",\n  22: \"dresser\",\n  23: \"house_plant\",\n  24: \"skateboard\",\n  25: \"skyscraper\",\n  26: \"pizza\",\n  27: \"hammer\",\n  28: \"teapot\",\n  29: \"giraffe\",\n  30: \"underwear\",\n  31: \"snowman\",\n  32: \"monkey\",\n  33: \"computer\",\n  34: \"pencil\",\n  35: \"shovel\",\n  36: \"necklace\",\n  37: \"compass\",\n  38: \"bat\",\n  39: \"bicycle\",\n  40: \"teddy-bear\",\n  41: \"scorpion\",\n  42: \"hot_dog\",\n  43: \"fish\",\n  44: \"see_saw\",\n  45: \"rain\",\n  46: \"snail\",\n  47: \"sink\",\n  48: \"belt\",\n  49: \"speedboat\",\n  50: \"pants\",\n  51: \"trombone\",\n  52: \"crocodile\",\n  53: \"broccoli\",\n  54: \"hedgehog\",\n  55: \"rainbow\",\n  56: \"fork\",\n  57: \"bulldozer\",\n  58: \"sock\",\n  59: \"snake\",\n  60: \"paper_clip\",\n  61: \"bear\",\n  62: \"marker\",\n  63: \"birthday_cake\",\n  64: \"saxophone\",\n  65: \"rake\",\n  66: \"stethoscope\",\n  67: \"broom\",\n  68: \"crown\",\n  69: \"square\",\n  70: \"fire_hydrant\",\n  71: \"jail\",\n  72: \"donut\",\n  73: \"oven\",\n  74: \"beard\",\n  75: \"yoga\",\n  76: \"The_Eiffel_Tower\",\n  77: \"camera\",\n  78: \"purse\",\n  79: \"ice_cream\",\n  80: \"pig\",\n  81: \"trumpet\",\n  82: \"table\",\n  83: \"bush\",\n  84: \"rollerskates\",\n  85: \"goatee\",\n  86: \"cup\",\n  87: \"anvil\",\n  88: \"suitcase\",\n  89: \"chair\",\n  90: \"drill\",\n  91: \"peanut\",\n  92: \"squirrel\",\n  93: \"matches\",\n  94: \"sword\",\n  95: \"cat\",\n  96: \"toe\",\n  97: \"snorkel\",\n  98: \"pond\",\n  99: \"calculator\",\n  100: \"airplane\",\n  101: \"squiggle\",\n  102: \"blackberry\",\n  103: \"ear\",\n  104: \"frying_pan\",\n  105: \"chandelier\",\n  106: \"lollipop\",\n  107: \"binoculars\",\n  108: \"garden\",\n  109: \"basket\",\n  110: \"penguin\",\n  111: \"washing_machine\",\n  112: \"canoe\",\n  113: \"screwdriver\",\n  114: \"beach\",\n  115: \"eyeglasses\",\n  116: \"mouse\",\n  117: \"apple\",\n  118: \"van\",\n  119: \"grapes\",\n  120: \"grass\",\n  121: \"watermelon\",\n  122: \"floor_lamp\",\n  123: \"moon\",\n  124: \"zigzag\",\n  125: \"nail\",\n  126: \"leg\",\n  127: \"smiley_face\",\n  128: \"octagon\",\n  129: \"dumbbell\",\n  130: \"sweater\",\n  131: \"stitches\",\n  132: \"tractor\",\n  133: \"foot\",\n  134: \"helmet\",\n  135: \"basketball\",\n  136: \"crab\",\n  137: \"clock\",\n  138: \"diamond\",\n  139: \"car\",\n  140: \"axe\",\n  141: \"traffic_light\",\n  142: \"sleeping_bag\",\n  143: \"baseball\",\n  144: \"eye\",\n  145: \"flower\",\n  146: \"hot_air_balloon\",\n  147: \"tree\",\n  148: \"wine_bottle\",\n  149: \"hot_tub\",\n  150: \"peas\",\n  151: \"door\",\n  152: \"calendar\",\n  153: \"wine_glass\",\n  154: \"stove\",\n  155: \"hockey_stick\",\n  156: \"toothpaste\",\n  157: \"moustache\",\n  158: \"mountain\",\n  159: \"tooth\",\n  160: \"cannon\",\n  161: \"firetruck\",\n  162: \"shorts\",\n  163: \"stereo\",\n  164: \"cloud\",\n  165: \"paintbrush\",\n  166: \"pear\",\n  167: \"dishwasher\",\n  168: \"laptop\",\n  169: \"frog\",\n  170: \"vase\",\n  171: \"diving_board\",\n  172: \"backpack\",\n  173: \"lobster\",\n  174: \"golf_club\",\n  175: \"garden_hose\",\n  176: \"hexagon\",\n  177: \"bird\",\n  178: \"finger\",\n  179: \"animal_migration\",\n  180: \"steak\",\n  181: \"mailbox\",\n  182: \"shark\",\n  183: \"television\",\n  184: \"mermaid\",\n  185: \"cow\",\n  186: \"crayon\",\n  187: \"palm_tree\",\n  188: \"windmill\",\n  189: \"cookie\",\n  190: \"kangaroo\",\n  191: \"blueberry\",\n  192: \"tiger\",\n  193: \"tennis_racquet\",\n  194: \"dragon\",\n  195: \"cell_phone\",\n  196: \"pineapple\",\n  197: \"candle\",\n  198: \"sheep\",\n  199: \"cactus\",\n  200: \"angel\",\n  201: \"mosquito\",\n  202: \"church\",\n  203: \"couch\",\n  204: \"The_Great_Wall_of_China\",\n  205: \"tornado\",\n  206: \"jacket\",\n  207: \"nose\",\n  208: \"octopus\",\n  209: \"motorbike\",\n  210: \"bracelet\",\n  211: \"brain\",\n  212: \"The_Mona_Lisa\",\n  213: \"toothbrush\",\n  214: \"carrot\",\n  215: \"barn\",\n  216: \"microphone\",\n  217: \"zebra\",\n  218: \"map\",\n  219: \"camel\",\n  220: \"wheel\",\n  221: \"bridge\",\n  222: \"lighthouse\",\n  223: \"spreadsheet\",\n  224: \"hockey_puck\",\n  225: \"wristwatch\",\n  226: \"helicopter\",\n  227: \"swan\",\n  228: \"flamingo\",\n  229: \"eraser\",\n  230: \"bee\",\n  231: \"flashlight\",\n  232: \"megaphone\",\n  233: \"ladder\",\n  234: \"shoe\",\n  235: \"asparagus\",\n  236: \"t-shirt\",\n  237: \"passport\",\n  238: \"hand\",\n  239: \"triangle\",\n  240: \"lightning\",\n  241: \"mug\",\n  242: \"submarine\",\n  243: \"violin\",\n  244: \"owl\",\n  245: \"scissors\",\n  246: \"baseball_bat\",\n  247: \"string_bean\",\n  248: \"lantern\",\n  249: \"house\",\n  250: \"elbow\",\n  251: \"power_outlet\",\n  252: \"stop_sign\",\n  253: \"bed\",\n  254: \"school_bus\",\n  255: \"hamburger\",\n  256: \"lipstick\",\n  257: \"light_bulb\",\n  258: \"flip_flops\",\n  259: \"alarm_clock\",\n  260: \"ant\",\n  261: \"face\",\n  262: \"microwave\",\n  263: \"hourglass\",\n  264: \"panda\",\n  265: \"pool\",\n  266: \"circle\",\n  267: \"onion\",\n  268: \"raccoon\",\n  269: \"bowtie\",\n  270: \"umbrella\",\n  271: \"butterfly\",\n  272: \"fireplace\",\n  273: \"skull\",\n  274: \"train\",\n  275: \"mouth\",\n  276: \"hat\",\n  277: \"drums\",\n  278: \"book\",\n  279: \"radio\",\n  280: \"roller_coaster\",\n  281: \"snowflake\",\n  282: \"piano\",\n  283: \"rhinoceros\",\n  284: \"cake\",\n  285: \"toaster\",\n  286: \"paint_can\",\n  287: \"knee\",\n  288: \"spider\",\n  289: \"tent\",\n  290: \"rabbit\",\n  291: \"clarinet\",\n  292: \"whale\",\n  293: \"boomerang\",\n  294: \"hospital\",\n  295: \"ceiling_fan\",\n  296: \"saw\",\n  297: \"pillow\",\n  298: \"fence\",\n  299: \"dog\",\n  300: \"duck\",\n  301: \"parrot\",\n  302: \"swing_set\",\n  303: \"spoon\",\n  304: \"fan\",\n  305: \"cruise_ship\",\n  306: \"picture_frame\",\n  307: \"mushroom\",\n  308: \"headphones\",\n  309: \"horse\",\n  310: \"flying_saucer\",\n  311: \"lion\",\n  312: \"postcard\",\n  313: \"bench\",\n  314: \"keyboard\",\n  315: \"parachute\",\n  316: \"streetlight\",\n  317: \"arm\",\n  318: \"police_car\",\n  319: \"sailboat\",\n  320: \"cooler\",\n  321: \"bathtub\",\n  322: \"campfire\",\n  323: \"hurricane\",\n  324: \"soccer_ball\",\n  325: \"potato\",\n  326: \"dolphin\",\n  327: \"key\",\n  328: \"elephant\",\n  329: \"sea_turtle\",\n  330: \"popsicle\",\n  331: \"envelope\",\n  332: \"pickup_truck\",\n  333: \"remote_control\",\n  334: \"ambulance\",\n  335: \"pliers\",\n  336: \"bread\",\n  337: \"castle\",\n  338: \"river\",\n  339: \"bandage\"\n};\n\nexport function loadPredictionSuccess(prediction) {\n  return {type: types.PREDICTION_SUCCESS, prediction: prediction};\n}\n\nexport const predict = (imageData) => {\n// export async function predict(imageData) {\n  return async (dispatch) => {\n    if (model == null) {\n      return \"model could not be loaded\";\n    }\n    const image = tf.tidy(() => {\n      const inputData = imageData;\n      let width = inputData.width;\n      let height = inputData.height;\n      let image = tf.tensor(Array.from(inputData.data));\n      image = tf.reshape(image, [width, height, 4]);\n      image = tf.slice(image, [0, 0, 0], [width, height, 3]);\n      image = image.mean(2);\n      image = tf.reshape(image, [width, height, 1]);\n      image = tf.image.resizeBilinear(image, [32, 32]);\n      image = tf.reshape(image, [1, 32, 32, 1]);\n      return image;\n    });\n    const predictedArray = model.predict(image);\n    const predictedClass = predictedArray.as1D();\n    const classId = predictedClass.argMax().dataSync()[0];\n    let predictionScore = predictedClass.dataSync()[classId];\n    predictionScore = Math.round(predictionScore * 10000) / 10000;\n    predictedClass.dispose();\n    dispatch(loadPredictionSuccess(classIdToLabel[classId] + \", Score: \" + predictionScore));\n  };\n}\n\n\n\n\n\n\n\n\n/**\n * Test whether a given URL is retrievable.\n */\nasync function urlExists(url) {\n  try {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return response.ok;\n  } catch (err) {\n    return false;\n  }\n}\n\n/**\n * Load pretrained model stored at a remote URL.\n *\n * @return An instance of `tf.Model` with model topology and weights loaded.\n */\nasync function loadHostedPretrainedModel(url) {\n  try {\n    const model = await tf.loadModel(url);\n    return model;\n  } catch (error) {\n    throw(error);\n  }\n}\n\nasync function loadModel(HOSTED_MODEL_JSON_URL) {\n  if (await urlExists(HOSTED_MODEL_JSON_URL)) {\n    return loadHostedPretrainedModel(HOSTED_MODEL_JSON_URL);\n  }\n}\n\nexport const init = () => {\n  return async (dispatch) => {\n      model = await loadModel(\"http://localhost:8080/savedModels/jsModels2/model.json\");\n      dispatch(loadPredictionSuccess(\"Model is loaded\"));\n  };\n};\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello World!</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","\nexport const PREDICTION_SUCCESS = 'PREDICTION_SUCCESS';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport assign from 'object-assign';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as tensorflowActions from \"../actions/tensorflowActions\";\n\nclass DrawableCanvas extends React.Component {\n\n  componentDidMount(){\n    const canvas = ReactDOM.findDOMNode(this);\n\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    const context = canvas.getContext('2d');\n\n    this.setState({\n      canvas,\n      context\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.clear){\n      this.resetCanvas();\n    }\n  }\n  static getDefaultStyle() {\n    return {\n      brushColor: '#FFFF00',\n      lineWidth: 4,\n      cursor: 'pointer',\n      canvasStyle: {\n        backgroundColor: '#00FFDC'\n      },\n      clear: false\n    };\n  }\n\n  handleOnTouchStart (e) {\n    const rect = this.state.canvas.getBoundingClientRect();\n    this.state.context.beginPath();\n    this.setState({\n      lastX: e.targetTouches[0].pageX - rect.left,\n      lastY: e.targetTouches[0].pageY - rect.top,\n      drawing: true\n    });\n  }\n\n  handleOnMouseDown(e){\n    const rect = this.state.canvas.getBoundingClientRect();\n    this.state.context.beginPath();\n\n    this.setState({\n      lastX: e.clientX - rect.left,\n      lastY: e.clientY - rect.top,\n      drawing: true\n    });\n  }\n\n  handleOnTouchMove (e) {\n    if (this.state.drawing) {\n      const rect = this.state.canvas.getBoundingClientRect();\n      const lastX = this.state.lastX;\n      const lastY = this.state.lastY;\n      let currentX = e.targetTouches[0].pageX - rect.left;\n      let currentY = e.targetTouches[0].pageY - rect.top;\n      this.draw(lastX, lastY, currentX, currentY);\n      this.setState({\n        lastX: currentX,\n        lastY: currentY\n      });\n    }\n  }\n\n  handleOnMouseMove(e){\n    if(this.state.drawing){\n      const rect = this.state.canvas.getBoundingClientRect();\n      const lastX = this.state.lastX;\n      const lastY = this.state.lastY;\n      let currentX = e.clientX - rect.left;\n      let currentY = e.clientY - rect.top;\n\n      this.draw(lastX, lastY, currentX, currentY);\n      this.setState({\n        lastX: currentX,\n        lastY: currentY\n      });\n    }\n  }\n\n  handleonMouseUp() {\n    this.setState({\n      drawing: false\n    });\n    let imageData = this.state.context.getImageData(\n      0,\n      0,\n      this.state.canvas.width,\n      this.state.canvas.height\n    );\n    this.props.actions.predict(imageData);\n  }\n\n  draw(lX, lY, cX, cY) {\n    const newContext = this.state.context;\n    newContext.strokeStyle = this.props.brushColor;\n    newContext.lineWidth = this.props.lineWidth;\n    this.setState({\n      context: newContext\n    });\n    this.state.context.moveTo(lX, lY);\n    this.state.context.lineTo(cX, cY);\n    this.state.context.stroke();\n  }\n\n  resetCanvas(){\n    console.log(\"printingthis\",this)\n    const width = this.state.context.canvas.width;\n    const height = this.state.context.canvas.height;\n    this.state.context.clearRect(0, 0, width, height);\n  }\n\n  canvasStyle(){\n    const defaults = DrawableCanvas.getDefaultStyle();\n    const custom = this.props.canvasStyle;\n\n    return assign({}, defaults, custom);\n  }\n\n  render() {\n    return (\n      <canvas style = {this.canvasStyle()}\n        onMouseDown = {this.handleOnMouseDown.bind(this)}\n        onTouchStart = {this.handleOnTouchStart.bind(this)}\n        onMouseMove = {this.handleOnMouseMove.bind(this)}\n        onTouchMove = {this.handleOnTouchMove.bind(this)}\n        onMouseUp = {this.handleonMouseUp.bind(this)}\n        onTouchEnd = {this.handleonMouseUp.bind(this)}\n      >\n      </canvas>\n    );\n  }\n\n}\n\nDrawableCanvas.propTypes = {\n  brushColor: PropTypes.string,\n  lineWidth: PropTypes.number,\n  cursor: PropTypes.string,\n  canvasStyle: PropTypes.shape({\n    backgroundColor: PropTypes.string\n  }),\n  clear: PropTypes.bool,\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(tensorflowActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DrawableCanvas);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as tensorflowActions from \"../actions/tensorflowActions\";\nimport DrawableCanvas from \"./DrawableCanvas\";\nimport PropTypes from 'prop-types'\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brushColor: \"#000000\",\n      lineWidth: 3,\n      canvasStyle: {\n        backgroundColor: \"#FFFFFF\",\n        borderColor: \"#786B6B\",\n        borderStyle: \"solid\"\n      },\n      clear: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.init();\n  }\n\n  handleOnClickClear() {\n    this.setState({clear: true},\n      () => {\n        this.setState({ clear: false });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Board</h1>\n        <label>Predicted class: {this.props.prediction}</label>\n        <button className=\"ui button yellow\" onClick={() => this.handleOnClickClear()}>Clear</button>\n        <DrawableCanvas {...this.state}/>\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  prediction: PropTypes.string.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    prediction: state.prediction\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(tensorflowActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board);\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/counter\";\nimport Board from \"./components/Board\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n        <Header />\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  prediction: \"Loading model... , please wait\"\n};\n","import { combineReducers } from 'redux';\nimport prediction from './tensorflowReducer';\n\nconst rootReducer = combineReducers({\n  prediction\n});\n\nexport default rootReducer;\n","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nexport default function prediction(state = initialState.prediction, action) {\n  switch (action.type) {\n    case types.PREDICTION_SUCCESS:\n    return action.prediction;\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(\n      applyMiddleware(thunk, reduxImmutableStateInvariant())\n    )\n  );\n}"],"sourceRoot":""}